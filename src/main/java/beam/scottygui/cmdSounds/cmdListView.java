/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package beam.scottygui.cmdSounds;

import beam.scottygui.Stores.CS;
import beam.scottygui.Utils.HTTP;
import beam.scottygui.Utils.SortedListModel;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javazoom.jl.player.Player;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author tjhasty
 */
public class cmdListView extends javax.swing.JFrame {

    /**
     * Creates new form cmdListView
     */
    JSONObject cmdSounds = new JSONObject();

    public cmdListView() {
        initComponents();
        if (CS.GUISettings.containsKey("cmdsounds")) {
            try {
                cmdSounds.putAll((JSONObject) new JSONParser().parse(CS.GUISettings.get("cmdsounds").toString()));
            } catch (ParseException ex) {
                Logger.getLogger(cmdListView.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            CS.GUISaveSettings("cmdsounds", cmdSounds.toJSONString());
        }

        String toParse = null;
        try {
            toParse = new HTTP().get("https://api.scottybot.net/showcoms?chanid=" + CS.ChanID + "&output=json");
        } catch (IOException | ParseException | InterruptedException | ClassNotFoundException | SQLException ex) {
            Logger.getLogger(cmdListView.class.getName()).log(Level.SEVERE, null, ex);
        }
        JSONArray cmdArray = new JSONArray();
        try {
            cmdArray.addAll((JSONArray) new JSONParser().parse(toParse));
            SortedListModel CMDList = new SortedListModel();
            for (Object T : cmdArray) {
                JSONObject cmd = (JSONObject) T;
                String Com = cmd.get("cmd").toString().toLowerCase();
                CMDList.add(Com.substring(1, Com.length()));
            }
            this.CMDList.setModel(CMDList);
        } catch (ParseException ex) {
            Logger.getLogger(cmdListView.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (this.CMDList.getSelectedIndex() == -1) {
                this.CMDList.setSelectedIndex(0);
                if (this.cmdSounds.containsKey(this.CMDList.getSelectedValue().toString())) {
                    this.removeSound.setEnabled(true);
                }
            }
        } catch (Exception e) {

        }

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        CMDList = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        removeSound = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        CMDList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        CMDList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                CMDListMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(CMDList);

        jButton1.setText("Add/Change Sound");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        removeSound.setText("Remove Sound");
        removeSound.setEnabled(false);
        removeSound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeSoundActionPerformed(evt);
            }
        });

        jButton3.setText("Test Sound");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Command List");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeSound, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeSound)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (this.CMDList.getSelectedIndex() == -1) {
            return;
        }
        this.setAlwaysOnTop(false);
        FileNameExtensionFilter SoundFilter = new FileNameExtensionFilter("MP3 Files", "mp3");
        JFileChooser Open = new JFileChooser();
        String FileLoc = null;
        Open.setAcceptAllFileFilterUsed(false);
        Open.addChoosableFileFilter(SoundFilter);
        if (Open.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            FileLoc = Open.getSelectedFile().getAbsolutePath();
            this.cmdSounds.put(this.CMDList.getSelectedValue().toString(), FileLoc);
            CS.GUISaveSettings("cmdsounds", cmdSounds.toJSONString());
        }
        this.setAlwaysOnTop(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Player playMP3 = null;
        FileInputStream fis = null;
        String cmd = this.CMDList.getSelectedValue().toString();
        if (this.cmdSounds.containsKey(cmd)) {
            try {
                fis = new FileInputStream(this.cmdSounds.get(cmd).toString());
                playMP3 = new Player(fis);
                playMP3.play();
            } catch (Exception ex) {
                //Logger.getLogger(AlertFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void removeSoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeSoundActionPerformed
        if (this.cmdSounds.containsKey(this.CMDList.getSelectedValue().toString())) {
            this.cmdSounds.remove(this.CMDList.getSelectedValue().toString());
            CS.GUISaveSettings("cmdsounds", this.cmdSounds.toJSONString());
            this.removeSound.setEnabled(false);
        }
    }//GEN-LAST:event_removeSoundActionPerformed

    private void CMDListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CMDListMouseReleased
        if (this.cmdSounds.containsKey(this.CMDList.getSelectedValue().toString())) {
            this.removeSound.setEnabled(true);
        } else {
            this.removeSound.setEnabled(false);
        }
    }//GEN-LAST:event_CMDListMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cmdListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cmdListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cmdListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cmdListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cmdListView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList CMDList;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeSound;
    // End of variables declaration//GEN-END:variables
}
