/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package beam.scottygui.ChatHandler;

import beam.scottygui.Stores.CS;
import static beam.scottygui.Stores.CS.ChatUserList;
import static beam.scottygui.Stores.CS.SendMSG;
import beam.scottygui.WhisperPanel;
import beam.scottygui.chanstatus.statuswindow;
import java.awt.event.KeyEvent;
import java.io.IOException;
import javax.websocket.EncodeException;
import org.json.simple.JSONObject;

public class ChatPopOut extends javax.swing.JFrame {

    /**
     * Creates new form ChatPopOut
     */
    boolean sendasbot = false;

    public ChatPopOut() {

        initComponents();
        this.Viewers.setModel(ChatUserList);
//        this.ExtChatOutput.setEditorKit(new HTMLEditorKit() {
//            @Override
//            public ViewFactory getViewFactory() {
//                return new HTMLFactory() {
//                    @Override
//                    public View create(Element e) {
//                        View v = super.create(e);
//                        if (v instanceof InlineView) {
//                            return new InlineView(e) {
//                                @Override
//                                public int getBreakWeight(int axis, float pos, float len) {
//                                    return GoodBreakWeight;
//                                }
//
//                                @Override
//                                public View breakView(int axis, int p0, float pos, float len) {
//                                    if (axis == View.X_AXIS) {
//                                        checkPainter();
//                                        int p1 = getGlyphPainter().getBoundedPosition(this, p0, pos, len);
//                                        if (p0 == getStartOffset() && p1 == getEndOffset()) {
//                                            return this;
//                                        }
//                                        return createFragment(p0, p1);
//                                    }
//                                    return this;
//                                }
//                            };
//                        } else if (v instanceof ParagraphView) {
//                            return new ParagraphView(e) {
//                                @Override
//                                protected SizeRequirements calculateMinorAxisRequirements(int axis, SizeRequirements r) {
//                                    if (r == null) {
//                                        r = new SizeRequirements();
//                                    }
//                                    float pref = layoutPool.getPreferredSpan(axis);
//                                    float min = layoutPool.getMinimumSpan(axis);
//                                    // Don't include insets, Box.getXXXSpan will include them.
//                                    r.minimum = (int) min;
//                                    r.preferred = Math.max(r.minimum, (int) pref);
//                                    r.maximum = Integer.MAX_VALUE;
//                                    r.alignment = 0.5f;
//                                    return r;
//                                }
//
//                            };
//                        }
//                        return v;
//                    }
//                };
//            }
//        });
        this.ExtChatOutput.setContentType("text/html");
        //this.ExtChatOutput.setText(new HTTP().BeamGet("https://beam.pro/embed/chat/" + ChanID));

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        ChatOutput = new javax.swing.JEditorPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        Viewers = new javax.swing.JList();
        ChatSend = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        ExtChatOutput = new javax.swing.JTextPane();
        StreamSet = new javax.swing.JButton();
        YouBot = new javax.swing.JToggleButton();

        ChatOutput.setEditable(false);
        ChatOutput.setBackground(new java.awt.Color(0, 0, 0));
        ChatOutput.setBorder(new javax.swing.border.MatteBorder(null));
        ChatOutput.setContentType("text/html"); // NOI18N
        ChatOutput.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        ChatOutput.setText("");
        ChatOutput.setToolTipText("");
        ChatOutput.setDoubleBuffered(true);
        jScrollPane5.setViewportView(ChatOutput);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Viewers.setBackground(new java.awt.Color(0, 0, 0));
        Viewers.setForeground(new java.awt.Color(255, 255, 255));
        Viewers.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        Viewers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Viewers.setAutoscrolls(false);
        Viewers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewersMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(Viewers);

        ChatSend.setCaretColor(new java.awt.Color(255, 255, 255));
        ChatSend.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        ChatSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChatSendActionPerformed(evt);
            }
        });
        ChatSend.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ChatSendKeyPressed(evt);
            }
        });

        ExtChatOutput.setBackground(new java.awt.Color(0, 0, 0));
        ExtChatOutput.setForeground(new java.awt.Color(255, 255, 255));
        ExtChatOutput.setDoubleBuffered(true);
        jScrollPane2.setViewportView(ExtChatOutput);

        StreamSet.setText("Channel Name and Game");
        StreamSet.setActionCommand("Stream Title");
        StreamSet.setEnabled(false);
        StreamSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StreamSetActionPerformed(evt);
            }
        });

        YouBot.setText("You");
        YouBot.setToolTipText("Switch between chatting as you or the bot.");
        YouBot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YouBotActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ChatSend, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(YouBot)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StreamSet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane7))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChatSend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StreamSet)
                    .addComponent(YouBot))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ViewersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewersMouseClicked
        if (evt.getClickCount() == 2) {
            WhisperPanel.showPanel(Viewers.getSelectedValue().toString());
        }
    }//GEN-LAST:event_ViewersMouseClicked

    private void ChatSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChatSendActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChatSendActionPerformed

    private void ChatSendKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ChatSendKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                if (!sendasbot) {
                    CS.session.getBasicRemote().sendText(SendMSG(ChatSend.getText().trim()));
                } else {
                    JSONObject bethebot = new JSONObject();
                    bethebot.put("bethebot", ChatSend.getText().trim());
                    CS.controlSes.getBasicRemote().sendObject(bethebot);
                }
                ChatSend.setText("");
            } catch (IOException | EncodeException ex) {
            }
        }
    }//GEN-LAST:event_ChatSendKeyPressed

    private void StreamSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StreamSetActionPerformed
        new statuswindow().setVisible(true);
    }//GEN-LAST:event_StreamSetActionPerformed

    private void YouBotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YouBotActionPerformed
        if (YouBot.isSelected()) {
            YouBot.setText("Bot");
            this.sendasbot = true;
        } else {
            YouBot.setText("You");
            this.sendasbot = false;
        }
    }//GEN-LAST:event_YouBotActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatPopOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatPopOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatPopOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatPopOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatPopOut().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JEditorPane ChatOutput;
    private javax.swing.JTextField ChatSend;
    public javax.swing.JTextPane ExtChatOutput;
    public static javax.swing.JButton StreamSet;
    public static javax.swing.JList Viewers;
    private javax.swing.JToggleButton YouBot;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    // End of variables declaration//GEN-END:variables
}
